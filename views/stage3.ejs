<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, func_48ial-scale=1.0">
    <title>JS Gauntlet 2 - Stage 3</title>

    <script defer>
        (() => {
            const observer = new MutationObserver(() => {
                if (!document.contains(document.querySelector('.hacker-overlay'))) window.location.reload();
            });

            observer.observe(document, {
                childList: true,
                subtree: true
            });
        })();
    </script>

    <style>
        .hacker-overlay {
            position: absolute;
            top: 0;
            left: 0;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: white;
            background-color: rgba(92, 5, 206, 0.5);
            width: 100%;
            height: 100%;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Courier New', Courier, monospace;
            background-color: #f4f4f4;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            display: flex;
            flex-direction: column;
            max-width: 1000px;
            width: 100%;
            height: 100%;
            background-color: white;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .header {
            color: white;
            padding: 20px;
            text-align: center;
        }

        .header img {
            width: 100%;
            height: auto;
        }

        .account-info {
            padding: 20px;
            background-color: #f9f9f9;
            border-bottom: 1px solid #ddd;
        }

        .dashboard {
            flex: 1;
            padding: 20px;
        }

        .dashboard-grid {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }

        .box {
            flex: 1 1 calc(50% - 20px);
            color: white;
            background-color: #4CAF50;
            font-weight: bold;
            padding: 20px;
            text-align: center;
        }

        .footer {
            background-color: #333;
            color: white;
            text-align: center;
            padding: 10px;
        }
    </style>
</head>

<body>
    <!-- 194.242.26.157: Это было весело делать, но теперь пришло время стать серьезным. Мы не позволим этим ублюдкам пройти мимо, поэтому я позаботился о том, чтобы добавить технологию античита. Я уверен, что в системе нет никаких трещин, поэтому используйте метод, описанный в Telegram, чтобы использовать систему, если это необходимо. -->
    <div class="container">
        <div class="hacker-overlay">
            <h2>Score 5 points and you may continue...</h2>
            <canvas id="pong-container"></canvas>
            <h2 id="flag-response" style="text-align: center;"></h2>
        </div>

        <header class="header">
            <img src="/img/razorpower_banner.png" alt="Banner">
        </header>

        <section class="account-info">
            <h2>Account Information</h2>
            <p>Welcome, R3n3gad3s Team</p>
            <p>Email: uber_h4cker5@gmail.com</p>
        </section>

        <section class="dashboard">
            <h2>Dashboard</h2>
            <div class="dashboard-grid">
                <div class="box" id="create-ticket">Create Ticket</div>
                <div class="box" id="list-ticket">List Tickets</div>
                <div class="box" id="send-notification">Send Notification</div>
                <div class="box" id="account-settings">Account Settings</div>
            </div>
        </section>

        <footer class="footer">
            <p>&copy; 2024 RazorPower. All rights reserved.</p>
        </footer>
    </div>

    <script defer>
        let var_46, var_70;
        let var_68, var_04, var_20;
        let var_29, var_77;
        let var_01, var_75;
        let var_80;
        let var_07, var_45;
        let var_62, var_95;
        let var_03;
        (() => {
            const var_08 = document.querySelector('#pong-container');
            const var_79 = var_08.getContext('2d');
            const var_73 = new Image();
            var_73.src = '/img/renegade.jpg';

            let var_35;

            const func_48 = () => {
                var_46 = var_08.height / 2;
                var_70 = var_08.height / 2;
                var_68 = 20;
                var_04 = 100;
                var_20 = 5;
                var_80 = 30;

                var_29 = var_08.width / 2;
                var_77 = var_08.height / 2;
                var_01 = 250;
                var_75 = 150;

                var_07 = false;
                var_45 = false;
                var_03 = false;

                var_62 = 0;
                var_95 = 0;

                fetch('/api/stage3/init');
            }

            let var_21, var_25;
            const func_21 = (var_02) => {
                if (var_21 === undefined) {
                    var_25 = 0;
                } else {
                    var_25 = (var_02 - var_21) / 1000;
                }   
                var_21 = var_02;

                var_79.fillStyle = '#000';
                var_79.fillRect(0, 0, var_08.width, var_08.height);

                var_79.shadowBlur = 10;
                var_79.lineWidth = 3;
                var_79.shadowColor = 'rgba(92, 5, 206)';
                var_79.strokeStyle = 'rgba(130, 77, 204)';
                var_79.fillStyle = 'rgba(92, 5, 206)';
                var_79.fillRect(var_20, var_46 - var_04 / 2, var_68, var_04);
                var_79.strokeRect(var_20, var_46 - var_04 / 2, var_68, var_04);
                var_79.fillRect(var_08.width - (var_68 + var_20), var_70 - var_04 / 2, var_68, var_04);
                var_79.strokeRect(var_08.width - (var_68 + var_20), var_70 - var_04 / 2, var_68, var_04);
                var_79.drawImage(var_73, var_29 - var_80 / 2, var_77 - var_80 / 2, var_80, var_80);
                var_79.strokeRect(var_29 - var_80 / 2, var_77 - var_80 / 2, var_80, var_80);
                
                var_79.font = '20px cursive';
                var_79.textAlign = 'center';
                var_79.strokeText(var_62, var_08.width / 2 - 50, 25);
                var_79.strokeText(var_95, var_08.width / 2 + 50, 25);

                if (var_35 > 0) {
                    var_79.strokeText(Math.ceil(var_35), var_08.width / 2, 25);
                }

                if (var_03) {
                    var_79.strokeText('Paused', var_08.width / 2, 60);
                }

                var_79.shadowBlur = 0;
                var_79.fillText(var_62, var_08.width / 2 - 50, 25);
                var_79.fillText(var_95, var_08.width / 2 + 50, 25);

                if (var_35 > 0) {
                    var_79.fillText(Math.ceil(var_35), var_08.width / 2, 25);
                }

                if (var_03) {
                    var_79.fillText('Paused', var_08.width / 2, 60);
                }

                if (var_35 > 0 || var_03) {
                    if (!var_03) var_35 -= var_25;
                } else {
                    var_29 += var_01 * var_25;
                    var_77 += var_75 * var_25;

                    if (var_77 < var_80 / 2 || var_77 > var_08.height - var_80 / 2) var_75 *= -1;

                    if (var_07) var_46 -= 250 * var_25;
                    if (var_45) var_46 += 250 * var_25;

                    var_70 = var_77;

                    if (func_12({
                        x: var_29 - var_80 / 2,
                        y: var_77 - var_80 / 2,
                        w: var_80,
                        h: var_80
                    }, {
                        x: var_20, 
                        y: var_46 - var_04 / 2, 
                        w: var_68,
                        h: var_04
                    }) || func_12({
                        x: var_29 - var_80 / 2,
                        y: var_77 - var_80 / 2,
                        w: var_80,
                        h: var_80
                    }, {
                        x: var_08.width - (var_68 + var_20),
                        y: var_70 - var_04 / 2, 
                        w: var_68,
                        h: var_04
                    })) {
                        var_01 *= -1;
                    }

                    if (var_29 < -var_80 / 2) {
                        var_95++;
                        var_35 = 3;
                        func_88();
                        func_43();
                    } else if (var_29 > var_08.width + var_80 / 2) {
                        var_62++;
                        var_35 = 3;
                        func_88();
                        func_43();
                    }
                }
                
                window.requestAnimationFrame(func_21);
            }

            const func_97 = () => {
                var_08.width = Math.min(600, window.innerWidth * 0.75);
                var_08.height = var_08.width * 0.75;
            }

            const func_43 = () => {
                var_29 = var_08.width / 2;
                var_77 = var_08.height / 2;
                var_01 *= -1;
            }

            const func_12 = (a, b) => {
                return (a.x < b.x + b.w &&
                        a.x + a.w > b.x &&
                        a.y < b.y + b.h &&
                        a.y + a.h > b.y);
            }

            const func_88 = () => {
                fetch('/api/stage3/check', {
                    method: 'post',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        var_46, var_70,
                        var_68, var_04,
                        var_29, var_77,
                        var_01, var_75,
                        var_80,
                        var_07, var_45,
                        var_62, var_95,
                        var_18: var_08.width,
                        var_40: var_08.height
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.flag != null) {
                        document.querySelector('#flag-response').innerHTML = data.flag;
                    }

                    if (data.timeout) {
                        var_62 = 0;
                        var_95 = 0;
                    }
                });
            }

            func_97();
            func_48();
            func_21();

            window.addEventListener('resize', func_97);

            window.addEventListener('keydown', event => {
                if (event.key == 'ArrowUp') var_07 = true;
                if (event.key == 'ArrowDown') var_45 = true;
                if (event.key == 'Escape') var_03 = !var_03;
            });

            window.addEventListener('keyup', event => {
                if (event.key == 'ArrowUp') var_07 = false;
                if (event.key == 'ArrowDown') var_45 = false;
            });

            window.addEventListener('blur', () => {
                var_03 = true;
            });

            window.addEventListener('focus', () => {
                var_03 = false;
            })
        })();
    </script>
</body>

</html>