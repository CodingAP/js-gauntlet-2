<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JS Gauntlet 2 - Stage 4</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Courier New', Courier, monospace;
            background-color: #f4f4f4;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            display: flex;
            flex-direction: column;
            max-width: 1000px;
            width: 100%;
            height: 100%;
            background-color: white;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .header {
            color: white;
            padding: 20px;
            text-align: center;
        }

        .header img {
            width: 100%;
            height: auto;
        }

        .account-info {
            padding: 20px;
            background-color: #f9f9f9;
            border-bottom: 1px solid #ddd;
        }

        .dashboard {
            flex: 1;
            padding: 20px;
        }

        .dashboard-grid {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }

        .box {
            flex: 1 1 calc(50% - 20px);
            color: white;
            background-color: #4CAF50;
            font-weight: bold;
            padding: 20px;
            text-align: center;
        }

        .footer {
            background-color: #333;
            color: white;
            text-align: center;
            padding: 10px;
        }

        .toast {
            visibility: hidden;
            min-width: 200px;
            color: black;
            background-color: lightgreen;
            text-align: center;
            border: 3px solid green;
            border-radius: 4px;
            padding: 16px;
            position: fixed;
            right: 20px;
            bottom: 20px;
            z-index: 1;
            opacity: 0;
            transition: opacity 0.5s, visibility 0.5s;
        }

        .toast.error {
            background-color: lightcoral;
            border-color: red;
        }

        .toast.show {
            visibility: visible;
            opacity: 1;
        }
    </style>
</head>

<body>
    <!-- XXX.XXX.XX.XXX: Я решил скрыть свой IP-адрес сейчас, потому что, судя по всему, предыдущие сообщения просочились на сайт. Я не знаю, как это произошло, но надеюсь, что это не приведет к проблемам в будущем. -->
    <div class="container">
        <header class="header">
            <img src="/img/razorpower_banner.png" alt="Banner">
        </header>

        <section class="account-info">
            <h2>Account Information</h2>
            <p>Welcome, R3n3gad3s Team</p>
            <p>Email: uber_h4cker5@gmail.com</p>
        </section>

        <section class="dashboard">
            <h2>Dashboard</h2>
            <div class="dashboard-grid">
                <div class="box" id="create-ticket">Create Ticket</div>
                <div class="box" id="list-ticket">List Tickets</div>
                <div class="box" id="send-notification">Send Notification</div>
                <div class="box" id="account-settings">Account Settings</div>
            </div>
        </section>

        <footer class="footer">
            <p>&copy; 2024 RazorPower. All rights reserved.</p>
        </footer>

        <div id="toast" class="toast">Invalid username or password</div>
    </div>

    <script defer>
        (() => {
            document.querySelectorAll('.box').forEach(element => {
                element.addEventListener('click', () => {
                    fetch('/api/stage4/request', {
                        method: 'post',
                        headers: {
                            'content-type': 'application/json'
                        },
                        body: JSON.stringify({ id: element.id })
                    })
                    .then(response => response.json())
                    .then(data => { 
                        if (data.error) {
                            sendNotification(true, data.error);
                        } else {
                            sendNotification(false, data.flag);
                        }
                    });
                });
            })
        })();

        const sendNotification = (isError, content) => {
            const toast = document.querySelector('#toast');
            toast.classList.add('show');
            toast.innerHTML = content;

            toast.classList.remove('error');
            if (isError) {
                toast.classList.add('error');
            }
            
            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }
    </script>
</body>

</html>